/***********************************************************
 * BOSCH_0280218067.h
 *
 * Manufacturer: Bosch
 * Part#: 0280218067 (OEM Audi) / 0986280219 (alt VAG) / F00C2G2047 (sensor only)
 * MAF file for type: AUDI RS4
 * File units = 10 * kg/h
 * Comments: Original data from MS4X website - https://www.ms4x.net/index.php?title=Aftermarket_Upgrade_Sensor_Data
 * and also e46 fanatics website - https://www.e46fanatics.com/threads/audi-rs4-maf-on-siemens-ms43-bosch-0-280-218-067.1113160/
 * Status: VALIDATED / UNTESTED
 * Support: https://github.com/DeeEmm/DIY-Flow-Bench/wiki/MAF-Data-Files
 * Discussion: https://github.com/DeeEmm/DIY-Flow-Bench/discussions/138
 * 1805 kg/h is Approx 884cfm 
 ***/
#ifndef MAFDATACLASS
#define MAFDATACLASS

#include <Arduino.h>
#include "../constants.h"
#include "mafData/maf.h"



/***********************************************************
 * @brief MAF Class Constructor
 * @note: See exampleMafData.h for explaination and example
 * 
 ***/
Maf::Maf() {
}



/***********************************************************
 * @brief MAF Type
 * 
 * @note Description of MAF type
 *
 ***/
String Maf::sensorType() {
    return "BOSCH_0280218067";
}



/***********************************************************
 * @brief MAF Output Type
 *
 * @note Valid options:
 * VOLTAGE
 * FREQUENCY
 ***/
int Maf::outputType() {
    return VOLTAGE;
}



/***********************************************************
 * @brief MAF Units
 * 
 * @note: Valid options:
 * KG_H
 * MG_S
 ***/
int Maf::mafUnits() {
    return KG_H;
}



/***********************************************************
 * @brief Original MAF Diameter in mm
 * 
 * @note Used to calculate MAF transfer function to transpose 
 * flow rates for different pipe diameters
 * @note Dimension Verified
 ***/
int Maf::mafDiameter() {
    return 82;
}



/***********************************************************
 * @brief mafLookupTable
 * @note Global vector of vectors containing MAF>Flow key>value pairs
 ***/
 std::vector<std::vector<long>> mafLookupTable = {{ 
    {0,0},
    {2,0},
    {4,0},
    {6,0},
    {8,0},
    {10,0},
    {12,0},
    {14,0},
    {16,0},
    {18,0},
    {20,0},
    {21,0},
    {23,0},
    {25,0},
    {27,0},
    {29,0},
    {31,0},
    {33,0},
    {35,0},
    {37,0},
    {39,0},
    {41,0},
    {43,0},
    {45,0},
    {47,0},
    {49,0},
    {51,0},
    {53,0},
    {55,0},
    {57,0},
    {59,0},
    {61,0},
    {63,0},
    {64,0},
    {66,0},
    {68,0},
    {70,0},
    {72,0},
    {74,0},
    {76,0},
    {78,0},
    {80,0},
    {82,0},
    {84,0},
    {86,0},
    {88,0},
    {90,0},
    {92,0},
    {94,0},
    {96,0},
    {98,2},
    {100,0},
    {102,16},
    {104,40},
    {105,48},
    {107,62},
    {109,73},
    {111,83},
    {113,94},
    {115,105},
    {117,116},
    {119,126},
    {121,136},
    {123,147},
    {125,158},
    {127,169},
    {129,181},
    {131,191},
    {133,206},
    {135,216},
    {137,229},
    {139,241},
    {141,251},
    {143,266},
    {145,276},
    {146,296},
    {148,306},
    {150,316},
    {152,336},
    {154,346},
    {156,366},
    {158,376},
    {160,396},
    {162,406},
    {164,426},
    {166,436},
    {168,456},
    {170,476},
    {172,486},
    {174,506},
    {176,516},
    {178,536},
    {180,556},
    {182,576},
    {184,596},
    {186,616},
    {188,626},
    {189,656},
    {191,676},
    {193,696},
    {195,716},
    {197,736},
    {199,756},
    {201,786},
    {203,806},
    {205,836},
    {207,856},
    {209,886},
    {211,906},
    {213,936},
    {215,966},
    {217,986},
    {219,1016},
    {221,1046},
    {223,1076},
    {225,1096},
    {227,1126},
    {229,1176},
    {230,1186},
    {232,1216},
    {234,1246},
    {236,1276},
    {238,1306},
    {240,1346},
    {242,1376},
    {244,1406},
    {246,1446},
    {248,1476},
    {250,1516},
    {252,1546},
    {254,1586},
    {256,1626},
    {258,1666},
    {260,1706},
    {262,1746},
    {264,1796},
    {266,1836},
    {268,1876},
    {270,1926},
    {271,1966},
    {273,2016},
    {275,2066},
    {277,2106},
    {279,2156},
    {281,2206},
    {283,2256},
    {285,2306},
    {287,2366},
    {289,2416},
    {291,2466},
    {293,2526},
    {295,2576},
    {297,2636},
    {299,2686},
    {301,2746},
    {303,2806},
    {305,2866},
    {307,2926},
    {309,2996},
    {311,3056},
    {313,3116},
    {314,3186},
    {316,3246},
    {318,3316},
    {320,3386},
    {322,3456},
    {324,3526},
    {326,3596},
    {328,3676},
    {330,3746},
    {332,3826},
    {334,3896},
    {336,3976},
    {338,4056},
    {340,4136},
    {342,4216},
    {344,4306},
    {346,4386},
    {348,4476},
    {350,4556},
    {352,4646},
    {354,4725},
    {355,4836},
    {357,4926},
    {359,5026},
    {361,5126},
    {363,5226},
    {365,5326},
    {367,5426},
    {369,5526},
    {371,5636},
    {373,5746},
    {375,5856},
    {377,5966},
    {379,6076},
    {381,6196},
    {383,6316},
    {385,6436},
    {387,6556},
    {389,6676},
    {391,6796},
    {393,6926},
    {395,7046},
    {396,7185},
    {398,7316},
    {400,7446},
    {402,7586},
    {404,7726},
    {406,7866},
    {408,8016},
    {410,8156},
    {412,8306},
    {414,8466},
    {416,8616},
    {418,8766},
    {420,8926},
    {422,9086},
    {424,9246},
    {426,9416},
    {428,9586},
    {430,9756},
    {432,9936},
    {434,10106},
    {436,10296},
    {438,10423},
    {439,10656},
    {441,10846},
    {443,11036},
    {445,11236},
    {447,11436},
    {449,11636},
    {451,11846},
    {453,12046},
    {455,12266},
    {457,12476},
    {459,12696},
    {461,12926},
    {463,13146},
    {465,13376},
    {467,13606},
    {469,13826},
    {471,14086},
    {473,14326},
    {475,14576},
    {477,14826},
    {479,15086},
    {480,15336},
    {482,15596},
    {484,15866},
    {486,16136},
    {488,16406},
    {490,16696},
    {492,16956},
    {494,17236},
    {496,17536},
    {498,18055}
    }};

#endif